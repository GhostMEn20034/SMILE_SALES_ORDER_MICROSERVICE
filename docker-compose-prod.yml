version: "3.8"
services:

  # Django app, order microservice
  web:
    build: .
    container_name: djangoorders
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py collectstatic --noinput &&
            gunicorn order_microservice.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/data/static
    environment:
      STATIC_ROOT: "/data/static"
    env_file:
      - .env.prod

  # Listens all product-related data from message broker
  product_queue_listener_orders:
    build: .
    container_name: product_queue_listener_orders
    command: python manage.py launch_product_queue_listener
    env_file:
      - .env.prod

  # Listens all user-related data from message broker
  user_data_queue_listener_orders:
    build: .
    container_name: user_data_queue_listener_orders
    command: python manage.py launch_user_queue_listener
    env_file:
      - .env.prod

  # Executes background tasks
  dramatiq_worker_orders:
    build: .
    container_name: dramatiq_worker_orders
    command: python manage.py rundramatiq --processes 1 --threads 2
    env_file:
      - .env.prod

  # Executes periodic tasks
  dramatiq_crontab_worker_orders:
    build: .
    container_name: dramatiq_crontab_worker_orders
    command: python manage.py crontab
    env_file:
      - .env.prod

  # Nginx reverse proxy
  nginx:
    image: nginx:1.27.1
    container_name: nginx_reverse_proxy
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - static_volume:/data/static
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

volumes:
  static_volume: # Define the volume where static files will be stored
